[env]
RUST_BACKTRACE = 0
LLVM_FEATURE = { value = "llvm13-0", condition = { env_not_set = [
    "LLVM_FEATURE",
] } }
PROFILE = { value = "dev", condition = { env_not_set = ["PROFILE"] } }
NO_C_SDK_BUILD = { value = "0", condition = { env_not_set = [
    "NO_C_SDK_BUILD",
] } }
NO_QIR_SDK_BUILD = { value = "0", condition = { env_not_set = [
    "NO_QIR_SDK_BUILD",
] } }
NO_HELPER_LIB_BUILD = { value = "0", condition = { env_not_set = [
    "NO_HELPER_LIB_BUILD",
] } }

[tasks.assemble-llvm]
command = "find"
description = "Assemble all LLVM .ll files in this package into bitcode"
args = [".", "-name", "*.ll", "-exec", "llvm-as", "{}", ";"]

[tasks.format-check]
command = "cargo"
args = ["fmt", "--all", "--", "--check"]

[tasks.clippy]
command = "cargo"
args = ["clippy", "--features", "${LLVM_FEATURE}", "--profile", "${PROFILE}"]

[tasks.pre-ci-flow]
dependencies = ["format-check", "clippy"]

[tasks.build]
args = ["build", "--features", "${LLVM_FEATURE}", "--profile", "${PROFILE}"]

[tasks.test]
args = ["test", "--features", "${LLVM_FEATURE}", "--profile", "${PROFILE}"]

[tasks.release-setup]
command = "./scripts/release/setup.sh"

[tasks.release-build]
command = "./scripts/release/build.sh"
args = [
    "NO_C_SDK_BUILD: ${NO_C_SDK_BUILD}",
    "NO_QIR_SDK_BUILD: ${NO_QIR_SDK_BUILD}",
    "NO_HELPER_LIB_BUILD: ${NO_HELPER_LIB_BUILD}",
]

[tasks.release-archive]
command = "./scripts/release/archive.sh"

[tasks.release-quick]
dependencies = ["release-setup", "release-build", "release-archive"]

[tasks.release-clean]
command = "./scripts/release/clean.sh"
